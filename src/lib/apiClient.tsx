import { SERVER_URL } from "@/constants/server";
import axios from "axios";

export const apiClient = axios.create({
  baseURL: SERVER_URL,
  timeout: 10000,
});

// // üîê –Ü–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –∑–∞–ø–∏—Ç—É ‚Äî –¥–æ–¥–∞–º–æ —Ç–æ–∫–µ–Ω (—è–∫—â–æ –∑'—è–≤–∏—Ç—å—Å—è)
// apiClient.interceptors.request.use(
//   (config) => {
//     const token = localStorage.getItem("accessToken");
//     if (token) {
//       config.headers.Authorization = `Bearer ${token}`;
//     }
//     return config;
//   },
//   (error) => Promise.reject(error)
// );

// // ‚ö†Ô∏è –Ü–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ ‚Äî –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
// apiClient.interceptors.response.use(
//   (response) => response,
//   (error) => {
//     if (error.response) {
//       const { status } = error.response;

//       if (status === 401) {
//         console.warn("–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ. –°–ø—Ä–æ–±—É–π —É–≤—ñ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.");
//         // –ú–æ–∂–µ—à —Ç—É—Ç —Ä–æ–±–∏—Ç–∏ logout, redirect —ñ —Ç.–ø.
//       }

//       if (status === 500) {
//         console.error("–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.");
//       }
//     }
//     return Promise.reject(error);
//   }
// );
