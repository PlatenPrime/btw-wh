import {
  usePermission,
  type Permission,
} from "@/modules/auth/hooks/usePermission";
import type { ReactNode } from "react";

interface PermissionGuardProps {
  /**
   * –î–µ—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
   */
  children: ReactNode;

  /**
   * –¢—Ä–µ–±—É–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
   */
  permission?: Permission;

  /**
   * –ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π (—Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)
   */
  permissions?: Permission[];

  /**
   * –ï—Å–ª–∏ true, —Ç—Ä–µ–±—É—é—Ç—Å—è –í–°–ï —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
   * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - false (—Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ)
   */
  requireAll?: boolean;

  /**
   * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤
   * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - null (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
   */
  fallback?: ReactNode;
}

/**
 * üîê –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
 *
 * –ë–æ–ª–µ–µ –≥—Ä–∞–Ω—É–ª—è—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤, —á–µ–º RoleGuard
 *
 * @example
 * // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–æ
 * <PermissionGuard permission="delete:pallets">
 *   <DeleteButton />
 * </PermissionGuard>
 *
 * @example
 * // –ü–æ–∫–∞–∑–∞—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
 * <PermissionGuard permissions={['edit:arts', 'create:arts']}>
 *   <ArtsManagementPanel />
 * </PermissionGuard>
 *
 * @example
 * // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –í–°–ï —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
 * <PermissionGuard
 *   permissions={['edit:users', 'delete:users']}
 *   requireAll
 * >
 *   <UserManagement />
 * </PermissionGuard>
 */
export function PermissionGuard({
  children,
  permission,
  permissions,
  requireAll = false,
  fallback = null,
}: PermissionGuardProps) {
  const { can, canAny, canAll } = usePermission();

  let hasPermission = false;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  if (permission) {
    hasPermission = can(permission);
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  else if (permissions && permissions.length > 0) {
    hasPermission = requireAll ? canAll(permissions) : canAny(permissions);
  }

  return hasPermission ? <>{children}</> : <>{fallback}</>;
}
