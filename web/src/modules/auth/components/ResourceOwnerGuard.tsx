import { useAuth } from "@/modules/auth/api/hooks/useAuth";
import { usePermission } from "@/modules/auth/hooks/usePermission";
import type { ReactNode } from "react";

interface ResourceOwnerGuardProps {
  /**
   * –î–µ—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
   */
  children: ReactNode;

  /**
   * ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ä–µ—Å—É—Ä—Å–∞
   */
  ownerId: string;

  /**
   * –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: 'edit' –∏–ª–∏ 'delete'
   */
  action: "edit" | "delete";

  /**
   * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤
   * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - null (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
   */
  fallback?: ReactNode;
}

/**
 * üë§ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Ä–µ—Å—É—Ä—Å–∞
 * 2. –ò–ª–∏ –∏–º–µ–µ—Ç –ª–∏ –ø—Ä–∞–≤–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/—É–¥–∞–ª—è—Ç—å —á—É–∂–∏–µ —Ä–µ—Å—É—Ä—Å—ã (ADMIN/PRIME)
 *
 * @example
 * // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –∏–ª–∏ –∞–¥–º–∏–Ω—É
 * <ResourceOwnerGuard ownerId={ask.asker} action="edit">
 *   <EditButton />
 * </ResourceOwnerGuard>
 *
 * @example
 * // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
 * <ResourceOwnerGuard
 *   ownerId={ask.asker}
 *   action="delete"
 *   fallback={<p>–ù–µ–º–∞—î –ø—Ä–∞–≤</p>}
 * >
 *   <DeleteButton />
 * </ResourceOwnerGuard>
 */
export function ResourceOwnerGuard({
  children,
  ownerId,
  action,
  fallback = null,
}: ResourceOwnerGuardProps) {
  const { user } = useAuth();
  const { canEditResource, canDeleteResource } = usePermission();

  if (!user) {
    return <>{fallback}</>;
  }

  let hasAccess = false;

  if (action === "edit") {
    hasAccess = canEditResource(ownerId);
  } else if (action === "delete") {
    hasAccess = canDeleteResource(ownerId);
  }

  return hasAccess ? <>{children}</> : <>{fallback}</>;
}
